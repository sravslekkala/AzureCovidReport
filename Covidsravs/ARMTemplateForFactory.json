{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Covidsravs"
		},
		"ls_blobstorage_covidsravs_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_blobstorage_covidsravs'"
		},
		"ls_databricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'ls_databricks'"
		},
		"ls_gen2_covidsravs_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_gen2_covidsravs'"
		},
		"ls_sql_database_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_sql_database'"
		},
		"ls_sql_db_connect_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_sql_db_connect'"
		},
		"ls_databricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "1203-234322-n5bk1wk2"
		},
		"ls_gen2_covidsravs_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://covidsravsdl.dfs.core.windows.net/"
		},
		"ls_get_EDCD_data_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://github.com/"
		},
		"ls_sql_db_connect_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "covidsrvsravs.database.windows.net"
		},
		"ls_sql_db_connect_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "coviddbsravs"
		},
		"ls_sql_db_connect_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "sravs"
		},
		"tr_population_data_arrived_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/e5defa48-3dbe-4866-836a-894f1036b49b/resourceGroups/covidrg/providers/Microsoft.Storage/storageAccounts/covidsravs"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Pl_load_population')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "checkFileexists",
						"type": "Validation",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_load_population",
								"type": "DatasetReference",
								"parameters": {}
							},
							"timeout": "0.00:02:30",
							"sleep": 10,
							"minimumSize": 1024
						}
					},
					{
						"name": "Get Metadata of population",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "checkFileexists",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_load_population",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"size",
								"exists",
								"columnCount"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "If Column count matches",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Get Metadata of population",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('Get Metadata of population').output.columnCount,13)",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Failed message",
									"type": "Fail",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"message": "\"Population incoming doesn't have 13 columns\"",
										"errorCode": {
											"value": "101",
											"type": "Expression"
										}
									}
								}
							],
							"ifTrueActivities": [
								{
									"name": "copy_population Data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_load_population",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_datalake_covidsravs",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "DeletesoureFile",
									"type": "Delete",
									"dependsOn": [
										{
											"activity": "copy_population Data",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataset": {
											"referenceName": "ds_load_population",
											"type": "DatasetReference",
											"parameters": {}
										},
										"enableLogging": false,
										"storeSettings": {
											"type": "AzureBlobStorageReadSettings",
											"recursive": true,
											"enablePartitionDiscovery": false
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "load_raw"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-13T19:14:17Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_load_population')]",
				"[concat(variables('factoryId'), '/datasets/ds_datalake_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_sql_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copyCasesDeaths",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "processed/ecdc/cases_deaths/"
							},
							{
								"name": "Destination",
								"value": "covid_reporting.cases_and_deaths"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE covid_reporting.cases_and_deaths;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country_code_2_digit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country_code_2_digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country_code_3_digit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country_code_3_digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "population",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "population",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "confirmed cases",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cases_count",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "deaths",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "deaths_count",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "reported_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reported_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_processed_cases",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_cases_deaths",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "sql"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_processed_cases')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_cases_deaths')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_sql_hospital_admissions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "copyHospitalAdmissions",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate table covid_reporting.hospital_admissions_daily;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country_code_2_digit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country_code_2_digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country_code_3_digit",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country_code_3_digit",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "population",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "population",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "reported_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "reported_date",
											"type": "DateTime",
											"physicalType": "date"
										}
									},
									{
										"source": {
											"name": "daily_hospital_occupancy_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "hospital_occupancy_count",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "daily_ICU_occupancy_count",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "icu_occupancy_count",
											"type": "Int64",
											"physicalType": "bigint"
										}
									},
									{
										"source": {
											"name": "source",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "source",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_processed_daily_hospital_admissions",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_sql_hospital_admissions",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "sql"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_processed_daily_hospital_admissions')]",
				"[concat(variables('factoryId'), '/datasets/ds_sql_hospital_admissions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_load_ecdc_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup_filenames",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:10:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_filenames_json",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachFilename",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup_filenames",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup_filenames').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set Source FileName",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "setSourceFilePath",
										"value": {
											"value": "@item().sourcerelativeURL",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set Sink FileName",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "setDestinationFilePath",
										"value": {
											"value": "@item().sinkfileName",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Copy_ECDC_Data",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Set Source FileName",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set Sink FileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.00:10:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings",
												"copyBehavior": "MergeFiles"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_load_ecdc_https",
											"type": "DatasetReference",
											"parameters": {
												"relativeUrl": {
													"value": "@variables('setSourceFilePath')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_load_ecdc_dl",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@variables('setDestinationFilePath')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"setSourceFilePath": {
						"type": "String"
					},
					"setDestinationFilePath": {
						"type": "String"
					}
				},
				"folder": {
					"name": "load_raw"
				},
				"annotations": [],
				"lastPublishTime": "2025-02-14T02:45:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_filenames_json')]",
				"[concat(variables('factoryId'), '/datasets/ds_load_ecdc_https')]",
				"[concat(variables('factoryId'), '/datasets/ds_load_ecdc_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Df_transform_cases_deaths",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_cases_deaths",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"CasesDeaths": {},
									"lookupcountry": {},
									"casesDeathsSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "process"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_cases_deaths')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_hospital_admissions')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "df_transform_hospital_admissions",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_hospital_admissions",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceHospitalAdmissions": {},
									"sourceCountryCodes": {},
									"sourceDimDate": {},
									"sinkHospitalAdmissions": {},
									"sinkDailyHospitalAdmissions": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "process"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/df_hospital_admissions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_population')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "transformPopulationNotebook",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/covidnotebooks/transform_population_data"
						},
						"linkedServiceName": {
							"referenceName": "ls_databricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "process"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_databricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_run_population_pipelines')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "loadPopulationData",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Pl_load_population",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "processPopulation",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "loadPopulationData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_process_population",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Pl_load_population')]",
				"[concat(variables('factoryId'), '/pipelines/pl_process_population')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_covidsravs",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CasesDeaths.csv",
						"folderPath": "ecdc/cases_deaths",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "rate_14_day",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_datalake_covidsravs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_covidsravs",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "population_by_age_tsv",
						"folderPath": "population",
						"fileSystem": "raw"
					},
					"columnDelimiter": "\t",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_filenames_json')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blobstorage_covidsravs",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "lookup"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "ecdc_file_list_for_2_files.json",
						"container": "config"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blobstorage_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_hospital_admissions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_covidsravs",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "hospital_admissions.csv",
						"folderPath": "ecdc/hospital_admissions",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_load_ecdc_dl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_covidsravs",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "ecdc",
						"fileSystem": "raw"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_load_ecdc_https')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_get_EDCD_data",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"relativeUrl": {
						"type": "string"
					}
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().relativeUrl",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\n",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_get_EDCD_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_load_population')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_blobstorage_covidsravs",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "raw"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "population_by_age.tsv.gz",
						"container": "population"
					},
					"columnDelimiter": "\t",
					"compressionCodec": "gzip",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "\u001f�\b\bHK�^\u0000\u0003tps00010.tsv\u0000�\\ێ�H�}�~E~�� ����ۖ�B�l��j��\u0002\u0006�c",
						"type": "String"
					},
					{
						"name": "�aw����U���8��jz�m�p$Q�ɸg0�������\u001f?���o�������_�\u000e]��!ᒰm\u0004[�N0",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_blobstorage_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lookup_dim_country')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_covidsravs",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "lookup"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "country_lookup.csv",
						"folderPath": "dim_country",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lookup_dim_date')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_covidsravs",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "lookup"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "dim_date.csv",
						"folderPath": "dim_date",
						"fileSystem": "lookup"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "date_key",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "day",
						"type": "String"
					},
					{
						"name": "day_name",
						"type": "String"
					},
					{
						"name": "day_of_year",
						"type": "String"
					},
					{
						"name": "week_of_month",
						"type": "String"
					},
					{
						"name": "week_of_year",
						"type": "String"
					},
					{
						"name": "month_name",
						"type": "String"
					},
					{
						"name": "year_month",
						"type": "String"
					},
					{
						"name": "year_week",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_cases')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_covidsravs",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "processed"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/cases_deaths",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_daily_hospital_admissions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_covidsravs",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "processed"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/hospital_admissions_daily",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					},
					{
						"name": "reported_date",
						"type": "String"
					},
					{
						"name": "confirmed cases",
						"type": "String"
					},
					{
						"name": "deaths",
						"type": "String"
					},
					{
						"name": "country_code_2_digit",
						"type": "String"
					},
					{
						"name": "country_code_3_digit",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_processed_hospital_admissions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_gen2_covidsravs",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "processed"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "ecdc/hospital_admissions_weekly",
						"fileSystem": "processed"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_db_connect",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "country_code_2_digit",
						"type": "varchar"
					},
					{
						"name": "country_code_3_digit",
						"type": "varchar"
					},
					{
						"name": "population",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "cases_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "deaths_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "reported_date",
						"type": "date"
					},
					{
						"name": "source",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "covid_reporting",
					"table": "cases_and_deaths"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_db_connect')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_hospital_admissions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_db_connect",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sql"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "country_code_2_digit",
						"type": "varchar"
					},
					{
						"name": "country_code_3_digit",
						"type": "varchar"
					},
					{
						"name": "population",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "reported_date",
						"type": "date"
					},
					{
						"name": "hospital_occupancy_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "icu_occupancy_count",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "source",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "covid_reporting",
					"table": "hospital_admissions_daily"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_db_connect')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_blobstorage_covidsravs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_blobstorage_covidsravs_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_databricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-116813293957602.2.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('ls_databricks_accessToken')]"
					},
					"existingClusterId": "[parameters('ls_databricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_gen2_covidsravs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_gen2_covidsravs_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_gen2_covidsravs_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_get_EDCD_data')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('ls_get_EDCD_data_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_database')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureMySql",
				"typeProperties": {
					"connectionString": "[parameters('ls_sql_database_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_db_connect')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_sql_db_connect_properties_typeProperties_server')]",
					"database": "[parameters('ls_sql_db_connect_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_sql_db_connect_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sql_db_connect_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_cases_deaths",
								"type": "DatasetReference"
							},
							"name": "CasesDeaths"
						},
						{
							"dataset": {
								"referenceName": "ds_lookup_dim_country",
								"type": "DatasetReference"
							},
							"name": "lookupcountry"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_cases",
								"type": "DatasetReference"
							},
							"name": "casesDeathsSink",
							"rejectedDataLinkedService": {
								"referenceName": "ls_gen2_covidsravs",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "selectRequiredFields"
						},
						{
							"name": "castDailyCounts"
						},
						{
							"name": "pivotCounts"
						},
						{
							"name": "lookupCountrysource"
						},
						{
							"name": "selectsink"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          country_code as string,",
						"          continent as string,",
						"          population as string,",
						"          indicator as string,",
						"          daily_count as string,",
						"          date as string,",
						"          rate_14_day as string,",
						"          source as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false) ~> CasesDeaths",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> lookupcountry",
						"CasesDeaths select(mapColumn(",
						"          country,",
						"          country_code,",
						"          population,",
						"          indicator,",
						"          daily_count,",
						"          source,",
						"          each(match(name=='date'),",
						"               'reported_date' = $$)",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectRequiredFields",
						"selectRequiredFields cast(output(",
						"          daily_count as integer",
						"     ),",
						"     errors: true) ~> castDailyCounts",
						"castDailyCounts pivot(groupBy(country,",
						"          country_code,",
						"          population,",
						"          source,",
						"          reported_date),",
						"     pivotBy(indicator, ['confirmed cases', 'deaths']),",
						"     count = sum(daily_count),",
						"     columnNaming: '$V$N',",
						"     lateral: false) ~> pivotCounts",
						"pivotCounts, lookupcountry lookup(pivotCounts@country == lookupcountry@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookupCountrysource",
						"lookupCountrysource select(mapColumn(",
						"          country = pivotCounts@country,",
						"          country_code,",
						"          source,",
						"          reported_date,",
						"          {confirmed cases} = {confirmed casescount},",
						"          deaths = deathscount,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          continent,",
						"          population = lookupcountry@population",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> selectsink",
						"selectsink sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     partitionFileNames:['cases_deaths.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> casesDeathsSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_cases_deaths')]",
				"[concat(variables('factoryId'), '/datasets/ds_lookup_dim_country')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_cases')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_covidsravs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/df_hospital_admissions')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_hospital_admissions",
								"type": "DatasetReference"
							},
							"name": "sourceHospitalAdmissions"
						},
						{
							"dataset": {
								"referenceName": "ds_lookup_dim_country",
								"type": "DatasetReference"
							},
							"name": "sourceCountryCodes"
						},
						{
							"dataset": {
								"referenceName": "ds_lookup_dim_date",
								"type": "DatasetReference"
							},
							"name": "sourceDimDate"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_processed_hospital_admissions",
								"type": "DatasetReference"
							},
							"name": "sinkHospitalAdmissions",
							"rejectedDataLinkedService": {
								"referenceName": "ls_gen2_covidsravs",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "ds_processed_daily_hospital_admissions",
								"type": "DatasetReference"
							},
							"name": "sinkDailyHospitalAdmissions",
							"rejectedDataLinkedService": {
								"referenceName": "ls_gen2_covidsravs",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "selectRequiredFields"
						},
						{
							"name": "lookupCountryCodes"
						},
						{
							"name": "removeDuplicateFields"
						},
						{
							"name": "deriveYearWeekNo"
						},
						{
							"name": "aggregateDimDate"
						},
						{
							"name": "joinHospitalDimDate"
						},
						{
							"name": "pivotIndicator"
						},
						{
							"name": "castValueToInt"
						},
						{
							"name": "sortByYearWeekCountry"
						},
						{
							"name": "RenamePivotedColumns"
						},
						{
							"name": "splitWeeklyDaily"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          indicator as string,",
						"          date as string,",
						"          year_week as string,",
						"          value as string,",
						"          source as string,",
						"          url as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceHospitalAdmissions",
						"source(output(",
						"          country as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false) ~> sourceCountryCodes",
						"source(output(",
						"          date_key as string,",
						"          date as string,",
						"          year as string,",
						"          month as string,",
						"          day as string,",
						"          day_name as string,",
						"          day_of_year as string,",
						"          week_of_month as string,",
						"          week_of_year as string,",
						"          month_name as string,",
						"          year_month as string,",
						"          year_week as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     limit: 100,",
						"     ignoreNoFilesFound: false) ~> sourceDimDate",
						"sourceHospitalAdmissions select(mapColumn(",
						"          country,",
						"          indicator,",
						"          reported_date = date,",
						"          reported_year_week = year_week,",
						"          value,",
						"          source",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectRequiredFields",
						"selectRequiredFields, sourceCountryCodes lookup(selectRequiredFields@country == sourceCountryCodes@country,",
						"     multiple: false,",
						"     pickup: 'any',",
						"     broadcast: 'auto')~> lookupCountryCodes",
						"lookupCountryCodes select(mapColumn(",
						"          country = selectRequiredFields@country,",
						"          indicator,",
						"          reported_date,",
						"          reported_year_week,",
						"          value,",
						"          source,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          continent,",
						"          population",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> removeDuplicateFields",
						"sourceDimDate derive(ecdc_year_week = year+ '-W'+ lpad(week_of_year,2,'0')) ~> deriveYearWeekNo",
						"deriveYearWeekNo aggregate(groupBy(ecdc_year_week),",
						"     week_start_date = min(date),",
						"          week_end_date = max(date)) ~> aggregateDimDate",
						"removeDuplicateFields, aggregateDimDate join(reported_year_week == ecdc_year_week,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> joinHospitalDimDate",
						"castValueToInt pivot(groupBy(country,",
						"          reported_date,",
						"          reported_year_week,",
						"          value,",
						"          source,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          continent,",
						"          population,",
						"          week_start_date,",
						"          week_end_date),",
						"     pivotBy(indicator, ['Daily hospital occupancy', 'Daily ICU occupancy', 'Weekly new hospital admissions per 100k', 'Weekly new ICU admissions per 100k']),",
						"     count = sum(value),",
						"     columnNaming: '$V$N',",
						"     lateral: true) ~> pivotIndicator",
						"joinHospitalDimDate cast(output(",
						"          value as integer",
						"     ),",
						"     errors: true) ~> castValueToInt",
						"pivotIndicator sort(asc(reported_year_week, true),",
						"     asc(country, true),",
						"     caseInsensitive: true) ~> sortByYearWeekCountry",
						"sortByYearWeekCountry select(mapColumn(",
						"          country,",
						"          reported_date,",
						"          reported_year_week,",
						"          value,",
						"          source,",
						"          country_code_2_digit,",
						"          country_code_3_digit,",
						"          continent,",
						"          population,",
						"          week_start_date,",
						"          week_end_date,",
						"          daily_hospital_occupancy_count = {Daily hospital occupancycount},",
						"          daily_ICU_occupancy_count = {Daily ICU occupancycount},",
						"          new_hospital_occupancy_count = {Weekly new hospital admissions per 100kcount},",
						"          new_ICU_admissions_count = {Weekly new ICU admissions per 100kcount}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> RenamePivotedColumns",
						"RenamePivotedColumns split(isNull(daily_hospital_occupancy_count) && isNull(daily_ICU_occupancy_count),",
						"     disjoint: false) ~> splitWeeklyDaily@(Weekly, Daily)",
						"splitWeeklyDaily@Weekly sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string,",
						"          Column_7 as string,",
						"          Column_8 as string,",
						"          Column_9 as string,",
						"          Column_10 as string",
						"     ),",
						"     partitionFileNames:['weekly_hospital_admissions'],",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     partitionBy('hash', 1)) ~> sinkHospitalAdmissions",
						"splitWeeklyDaily@Daily sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          country as string,",
						"          country_code as string,",
						"          source as string,",
						"          reported_date as string,",
						"          {confirmed cases} as string,",
						"          deaths as string,",
						"          country_code_2_digit as string,",
						"          country_code_3_digit as string,",
						"          continent as string,",
						"          population as string",
						"     ),",
						"     partitionFileNames:['daily_hospital_admissions'],",
						"     truncate: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     partitionBy('hash', 1)) ~> sinkDailyHospitalAdmissions"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_hospital_admissions')]",
				"[concat(variables('factoryId'), '/datasets/ds_lookup_dim_country')]",
				"[concat(variables('factoryId'), '/datasets/ds_lookup_dim_date')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_hospital_admissions')]",
				"[concat(variables('factoryId'), '/linkedServices/ls_gen2_covidsravs')]",
				"[concat(variables('factoryId'), '/datasets/ds_processed_daily_hospital_admissions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_population_data_arrived')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pl_run_population_pipelines",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/population/blobs/population_by_age.tsv.gz",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('tr_population_data_arrived_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_run_population_pipelines')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_ingest_ecdc')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pl_load_ecdc_data",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2025-02-18T13:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_load_ecdc_data')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_process_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pl_process_cases_deaths",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 24,
					"startTime": "2025-02-17T13:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "tr_ingest_ecdc",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_process_cases_deaths')]",
				"[concat(variables('factoryId'), '/triggers/tr_ingest_ecdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_process_hospital_admissions')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pl_process_hospital_admissions",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2025-02-18T13:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "tr_ingest_ecdc",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_process_hospital_admissions')]",
				"[concat(variables('factoryId'), '/triggers/tr_ingest_ecdc')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_sql_cases_deaths')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pl_ingest_sql_cases_deaths",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2025-02-18T13:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "tr_process_cases_deaths",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_sql_cases_deaths')]",
				"[concat(variables('factoryId'), '/triggers/tr_process_cases_deaths')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_sql_hospital_admissions')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipeline": {
					"pipelineReference": {
						"referenceName": "pl_ingest_sql_hospital_admissions",
						"type": "PipelineReference"
					},
					"parameters": {}
				},
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Hour",
					"interval": 24,
					"startTime": "2025-02-18T13:00:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"referenceTrigger": {
								"referenceName": "tr_process_hospital_admissions",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ingest_sql_hospital_admissions')]",
				"[concat(variables('factoryId'), '/triggers/tr_process_hospital_admissions')]"
			]
		}
	]
}